{
    "routes": [
        {
            "url": "/api/VGS/application_form",
            "params": {},
            "methods": {
                "POST": {
                    "summary": "create a new vgs user by user filling application form",
                    "body": {
                        "!email": "string().min(3)",
                        "clubCommittee": "string().min(3).optional()",
                        "hobbies": "string().min(3).optional()",
                        "gameName": "string().min(3).optional()"
                    },
                    "expected": {
                        "data": {
                            "!_id": "string().length(24)",
                            "clubCommittee": "string().min(2)",
                            "hobbies": "string().length(10)",
                            "gameName": "string().min(3).optional()"
                        }
                    }
                }
            }

        },
        {
            "url": "/api/VGS/application_form_view/:id",
            "params": {"!_id": "string().length(24)"},
            "methods": {
                "GET": {
                    "summary": "viewing the application form for a user to see his/her status",
                    "body": {},
                    "expected": {
                        "data": {
                            "appStatus": "string()"
                        }
                    }
                }
            }
        },
        {
            "url": "/api/VGS/application_forms_view",
            "params": {},
            "methods": {
                "GET": {
                    "summary": "viewing all the application forms that are still not accepted nor rejected",
                    "body": {},
                    "expected": {
                        "data": [
                            {
                                "!_id": "string().length(24)",
                                "gameName": "string().min(3)",
                                "clubCommittee": "string().min(3)",
                                "appStatus": "string().min(3)"
                            }
                        ]
                    }
                }
            }
        },
        {
            "url": "/api/VGS/application_form_update",
            "params": {},
            "methods": {
                "PUT": {
                    "summary": "update applicant's application form fields",
                    "body": {
                        "!email": "string().min(3)",
                        "hobbies": "string().min(3)"
                    },
                    "expected": {
                        "data": [
                            {
                                "!_id": "string().length(24)",
                                "email": "string().min(3)",
                                "hobbies": "string().min(3)"
                            }
                        ]
                    }
                }
            }
        },
        {
            "url": "/api/raise_vote/",
            "params": {},
            "methods": {
                "POST": {
                    "summary": "raising or creating a vote",
                    "body": {
                        "!issuerId": "string().length(24)",
                        "!nomineeId": "string().length(24)",
                        "!voteEndTime": "Date()"
                    },
                    "expected": {
                        "data": [
                            {
                                "!_id": "string().length(24)",
                                "!issuerId": "string().length(24)",
                                "!nomineeId": "string().length(24)",
                                "!voteEndTime": "Date()"
                            }
                        ]
                    }
                }
            }
        },
        {
            "url": "/api/raise_vote/:voteId",
            "params": {"!_id": "string().length(24)"},
            "methods": {
                "GET": {
                    "summary": "return how many voted yes and how many voted no",
                    "body": {},
                    "expected": {
                        "data": [
                            {
                                "For": "number()",
                                "Against": "number()"
                            }
                        ]
                    }
                },
                "POST": {
                    "summary": "user (director) can vote yes/no or change his/her vote",
                    "body": {
                        "voterID": "string().length(24)",
                        "decision": "boolean()"
                    },
                    "expected": {
                        "data": {"message": "your vote has been successfully submitted"}
                    }
                }
            }
        }
    ]
}